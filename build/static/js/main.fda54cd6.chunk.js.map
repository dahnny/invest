{"version":3,"sources":["components/Banner.js","components/MyAdmin.js","components/MyInvesments.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Banner","props","useState","name","setName","identification","setIdentification","amount","setAmount","duration","setDuration","className","onSubmit","event","preventDefault","invest","onChange","e","target","value","type","placeholder","MyAdmin","investments","map","investment","isPaid","onClick","isMature","payInvestment","index","matureHandler","MyInvestments","console","log","investor","Navbar","href","id","isAdmin","to","balance","App","contractAddress","cUSDContractAddress","usdBalance","setUsdBalance","contract","setContract","address","setAddress","kit","setKit","setInvestments","userInvestments","setUserInvestments","connection","a","window","celo","enable","web3","Web3","newKitFromWeb3","eth","getAccounts","accounts","user_address","defaultAccount","error","getUSDBalance","getTotalBalance","USDBalance","cUSD","shiftedBy","toFixed","Contract","abi","listOfInvestments","methods","getInvestmentLength","call","investmentLength","_investments","_investment","Promise","resolve","reject","getInvestments","identificationNumber","timestamp","push","all","_newInvestments","filter","_name","_identification","_amount","_duration","cUSDContract","IERC20","BigNumber","toString","approve","send","from","isInvestmentMature","payInvestor","useEffect","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fda54cd6.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Banner = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [identification, setIdentification] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.invest(name, identification, amount, duration);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-banner\">\r\n      <div className=\"main-banner-item banner-item-two\">\r\n        <div className=\"container\">\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"main-banner-content\">\r\n                <h1>However, you make it we'll help you increase it</h1>\r\n                <p>\r\n                  Join CeloInvest, a revolutionary investment platform, get 15%\r\n                  percent on your investment after every month.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"main-banner-form\">\r\n                <div className=\"content\">\r\n                  <h3>Investment Form</h3>\r\n                </div>\r\n                <form onSubmit={submitHandler}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12 col-sm-12\">\r\n                      <div className=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input\r\n                          onChange={(e) => setName(e.target.value)}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Name\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 col-sm-12\">\r\n                      <div className=\"form-group\">\r\n                        <label>Identification Number</label>\r\n                        <input\r\n                          onChange={(e) => setIdentification(e.target.value)}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Identification Number\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 col-sm-12\">\r\n                      <div className=\"form-group\">\r\n                        <label>Amount (CUSD)</label>\r\n                        <input\r\n                          onChange={(e) => setAmount(e.target.value)}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Amount\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 col-sm-12\">\r\n                      <div className=\"form-group\">\r\n                        <label>Duration (Months)</label>\r\n                        <input\r\n                          onChange={(e) => setDuration(e.target.value)}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Duration\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"banner-form-btn\">\r\n                        <button type=\"submit\" className=\"default-btn\">\r\n                          Invest NOW\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","\r\n\r\nconst MyAdmin = (props) => {\r\n  const matureHandler = (index) =>{\r\n    props.matureHandler(index);\r\n  }\r\n  const payInvestment = (investment)=>{\r\n    props.payInvestment(investment)\r\n  }\r\n  return (\r\n    <section className=\"pricing-area pt-100 pb-70\">\r\n     <div className=\"container\">\r\n        <div className=\"container\">\r\n          <div className=\"tab pricing-list-tab\">\r\n            <div className=\"tab_content\">\r\n              <div className=\"tabs_item\">\r\n                <div className=\"row\">\r\n                  {props.investments.map(investment=><div className=\"col-lg-4 col-md-6\">                  \r\n                    <div className=\"single-pricing-box\">\r\n                      <div className=\"pricing-header\">\r\n                        <h3>{investment.name}</h3>\r\n                      </div>\r\n                      <div className=\"price\">\r\n                        ${investment.amount} <span>m</span>\r\n                      </div>\r\n                      {!investment.isPaid ? <div className=\"pricing-btn\">\r\n                        <a onClick={investment.isMature? ()=>payInvestment(investment):()=>matureHandler(investment.index)} className=\"default-btn\">\r\n                          {investment.isMature ? \"Pay Loan\" : \"Check if mature\"} \r\n                          <span />\r\n                        </a>\r\n                      </div> : <p>Paid</p>} \r\n                      \r\n                    </div>\r\n                  </div>)}\r\n                  \r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MyAdmin;\r\n","const MyInvestments = (props) => {\r\n  return (\r\n    <section className=\"pricing-area pt-100 pb-70\">\r\n      <div className=\"container\">\r\n        <div className=\"container\">\r\n        <h2>My Investments</h2>\r\n          <div className=\"tab pricing-list-tab\">\r\n            <div className=\"tab_content\">\r\n              <div className=\"tabs_item\">\r\n                <div className=\"row\">\r\n                  {props.investments.map((investment) => (\r\n                    <div className=\"col-lg-4 col-md-6\">\r\n                      <div className=\"single-pricing-box\">\r\n                        <div className=\"pricing-header\">\r\n                        {console.log(investment.isPaid)}\r\n                          <p>{investment.investor}</p>\r\n                        </div>\r\n                        <div className=\"price\">\r\n                          ${investment.amount}\r\n                        </div>\r\n                        <div className=\"pricing-header\">\r\n                          Name: {investment.name}\r\n                        </div>\r\n                        <div className=\"pricing-header\">\r\n                          Duration: {investment.duration} month(s)\r\n                        </div>\r\n                        {investment.isPaid && <div className=\"pricing-header\">\r\n                         Retrieved\r\n                        </div>}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MyInvestments;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div className=\"navbar-area navbar-color-two\">\r\n      <div className=\"main-responsive-nav\">\r\n        <div className=\"container\">\r\n          <div className=\"main-responsive-menu\">\r\n            <div className=\"logo\">\r\n              <a href=\"index-2.html\">\r\n                <h1>CeloInvest</h1>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-navbar\">\r\n        <div className=\"container\">\r\n          <nav className=\"navbar navbar-expand-md navbar-light\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n              <h2>CeloInvest</h2>\r\n            </a>\r\n            <div\r\n              className=\"collapse navbar-collapse mean-menu\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              {props.isAdmin && (\r\n                <ul className=\"navbar-nav\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/admin\" className=\"nav-link\">\r\n                      Admin\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              )}\r\n\r\n              <div className=\"others-options d-flex align-items-center\">\r\n                <div className=\"option-item\">\r\n                  <a href=\"#\" className=\"default-btn\">\r\n                    CUSD: ${props.balance}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n      <div className=\"others-option-for-responsive color-two\">\r\n        <div className=\"container\">\r\n          <div className=\"dot-menu\">\r\n            <div className=\"inner\">\r\n              <div className=\"circle circle-one\" />\r\n              <div className=\"circle circle-two\" />\r\n              <div className=\"circle circle-three\" />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Banner from \"./components/Banner\";\nimport MyAdmin from \"./components/MyAdmin\";\nimport MyInvestments from \"./components/MyInvesments\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\nimport BigNumber from \"bignumber.js\";\nimport abi from \"./components/contracts/abi.abi.json\";\nimport IERC20 from \"./components/contracts/IERC20.abi.json\";\nfunction App() {\n  const ERC20_DECIMALS = 18;\n\n  const contractAddress = \"0x62C8178A2144BbD8676fc5994ecFE6F9A493f4Ee\";\n  const cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\n\n  const [usdBalance, setUsdBalance] = useState(0);\n  const [contract, setContract] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [kit, setKit] = useState(null);\n  const [investments, setInvestments] = useState([]);\n  const [userInvestments, setUserInvestments] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const connection = async () => {\n    if (window.celo) {\n      try {\n        await window.celo.enable();\n        // notificationOff()\n        const web3 = new Web3(window.celo);\n        let kit = newKitFromWeb3(web3);\n\n        const accounts = await kit.web3.eth.getAccounts();\n        const user_address = accounts[0];\n        console.log(user_address);\n\n        kit.defaultAccount = user_address;\n\n        await setAddress(user_address);\n        await setKit(kit);\n      } catch (error) {\n        console.log(\"There is an error\");\n        console.log({ error });\n      }\n    } else {\n      console.log(\"please install the extension\");\n    }\n  };\n\n  const getUSDBalance = async () => {\n    try {\n      const balance = await kit.getTotalBalance(address);\n      const USDBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n      const contract = new kit.web3.eth.Contract(abi, contractAddress);\n      setContract(contract);\n      setUsdBalance(USDBalance);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const listOfInvestments = async (props) => {\n    try {\n      const investmentLength = await contract.methods.getInvestmentLength().call();\n      const _investments = [];\n\n      for (let index = 0; index < investmentLength; index++) {\n        let _investment = new Promise(async (resolve, reject) => {\n          try {\n            let investment = await contract.methods\n              .getInvestments(index)\n              .call();\n            resolve({\n              index: index,\n              investor: investment[0],\n              name: investment[1],\n              identificationNumber: investment[2],\n              amount: investment[3],\n              duration: investment[4],\n              isMature: investment[5],\n              isPaid: investment[6],\n              timestamp: investment[7],\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        });\n        _investments.push(_investment);\n      }\n      const investments = await Promise.all(_investments);\n      const _newInvestments = investments.filter(\n        (investment) => investment.investor === address\n      );\n      setInvestments(investments);\n      setUserInvestments(_newInvestments);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const isUserAdmin = async () => {\n    try {\n      console.log(address);\n      const admin = await contract.methods.isUserAdmin(address).call();\n      setIsAdmin(admin);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const invest = async (_name, _identification, _amount, _duration) => {\n    const cUSDContract = new kit.web3.eth.Contract(IERC20, cUSDContractAddress);\n    try {\n      const amount = new BigNumber(_amount)\n        .shiftedBy(ERC20_DECIMALS)\n        .toString();\n      await cUSDContract.methods\n        .approve(contractAddress, amount)\n        .send({ from: address });\n      await contract.methods.invest(_name, _identification, _amount, _duration).send({from: address});\n      listOfInvestments();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const matureHandler = async (index)=>{\n    console.log(index);\n    try {\n      await contract.methods.isInvestmentMature(index).send({from: address});\n      listOfInvestments();\n    } catch (error) {\n      console.log(error);\n    }\n  \n  }\n\n  const payInvestment = async(investment)=>{\n    console.log(\"Pay\");\n    try {\n      const cUSDContract = new kit.web3.eth.Contract(IERC20, cUSDContractAddress);\n      const amount = new BigNumber(investment.amount + 10/100 * investment.amount)\n      .shiftedBy(ERC20_DECIMALS)\n      .toString();\n    await cUSDContract.methods\n      .approve(contractAddress, amount)\n      .send({ from: address });\n      await contract.methods.payInvestor(investment.index).send({from: address});\n      listOfInvestments()\n    } catch (error) {\n      console.log(error)\n    }\n\n  }\n\n\n  useEffect(() => {\n    connection();\n  }, []);\n\n  useEffect(() => {\n    if (kit && address) {\n      getUSDBalance();\n    } else {\n      console.log(\"no kit or address\");\n    }\n  }, [kit, address]);\n\n  useEffect(() => {\n    if (contract) {\n      listOfInvestments();\n      // isUserAdmin();\n      \n    }\n  }, [contract]);\n\n  useEffect(() => {\n    if (contract) {\n      \n    }\n  }, []);\n\n  return (\n    <Router>\n      <Navbar balance={usdBalance} isAdmin={isAdmin} />\n      <Switch>\n        <Route exact path=\"/\">\n          <Banner invest = {invest}/>\n        </Route>\n        <Route path=\"/admin\">\n          {isAdmin && <MyAdmin investments={investments} matureHandler = {matureHandler} payInvestment = {payInvestment}/>}\n        </Route>\n      </Switch>\n      <MyInvestments investments={userInvestments} />\n      {/* <Banner /> */}\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}